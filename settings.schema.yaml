$schema: https://json-schema.org/draft-07/schema#
$defs:
  Accounts:
    description: InNoHassle-Accounts integration settings
    properties:
      api_url:
        default: https://api.innohassle.ru/accounts/v0
        description: URL of the Accounts API
        title: Api Url
        type: string
    title: Accounts
    type: object
  ApiSettings:
    properties:
      app_root_path:
        default: ''
        description: Prefix for the API path (e.g. "/api/v0")
        title: App Root Path
        type: string
      cors_allow_origin_regex:
        default: .*
        description: 'Allowed origins for CORS: from which domains requests to the
          API are allowed. Specify as a regex: `https://.*\.innohassle\.ru`'
        title: Cors Allow Origin Regex
        type: string
      db_url:
        description: URL of the MongoDB database
        examples:
        - mongodb://username:password@localhost:27017/db?authSource=admin
        format: password
        title: Db Url
        type: string
        writeOnly: true
      compute_service_token:
        default: secret
        description: Access token for the compute service which is used for authentication
        title: Compute Service Token
        type: string
      compute_service_url:
        default: http://127.0.0.1:8024
        description: URL of the Compute service
        title: Compute Service Url
        type: string
    required:
    - db_url
    title: ApiSettings
    type: object
  ComputeSetting:
    properties:
      api_url:
        default: http://127.0.0.1:8001
        description: URL of the Search API
        title: Api Url
        type: string
      auth_token:
        default: secret
        description: Access token for the compute service which is used for authentication
        title: Auth Token
        type: string
      corpora_update_period:
        default: 300
        description: Period in seconds to fetch corpora from the API
        title: Corpora Update Period
        type: number
      num_workers:
        default: 4
        description: Number of workers to process tasks
        title: Num Workers
        type: integer
      qdrant_url:
        default: '**********'
        description: URL of the Qdrant service
        format: password
        title: Qdrant Url
        type: string
        writeOnly: true
      qdrant_collection_name:
        default: inh-search
        description: Name of the collection in the Qdrant service
        title: Qdrant Collection Name
        type: string
      bi_encoder_name:
        default: sentence-transformers/all-MiniLM-L6-v2
        description: Name of the bi-encoder model
        title: Bi Encoder Name
        type: string
      bi_encoder_batch_size:
        default: 32
        description: Batch size for the bi-encoder model
        title: Bi Encoder Batch Size
        type: integer
      cross_encoder_name:
        default: cross-encoder/ms-marco-MiniLM-L-6-v2
        description: Name of the cross-encoder model
        title: Cross Encoder Name
        type: string
      cross_encoder_batch_size:
        default: 32
        description: Batch size for the cross-encoder model
        title: Cross Encoder Batch Size
        type: integer
      cross_encoder_threshold:
        default: 0.0
        description: Threshold for the cross-encoder model (will filter out results
          with lower score)
        title: Cross Encoder Threshold
        type: number
    title: ComputeSetting
    type: object
  MinioSettings:
    properties:
      endpoint:
        default: 127.0.0.1:9000
        description: URL of the target service.
        title: Endpoint
        type: string
      secure:
        default: false
        description: Use https connection to the service.
        title: Secure
        type: boolean
      region:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: Region of the service.
        title: Region
      bucket:
        default: search
        description: Name of the bucket in the service.
        title: Bucket
        type: string
      access_key:
        description: Access key (user ID) of a user account in the service.
        examples:
        - minioadmin
        title: Access Key
        type: string
      secret_key:
        description: Secret key (password) for the user account.
        examples:
        - password
        format: password
        title: Secret Key
        type: string
        writeOnly: true
    required:
    - access_key
    - secret_key
    title: MinioSettings
    type: object
properties:
  $schema:
    default: null
    title: $Schema
    type: string
  api_settings:
    $ref: '#/$defs/ApiSettings'
  compute_settings:
    allOf:
    - $ref: '#/$defs/ComputeSetting'
    default:
      api_url: http://127.0.0.1:8001
      auth_token: secret
      corpora_update_period: 300.0
      num_workers: 4
      qdrant_url: '**********'
      qdrant_collection_name: inh-search
      bi_encoder_name: sentence-transformers/all-MiniLM-L6-v2
      bi_encoder_batch_size: 32
      cross_encoder_name: cross-encoder/ms-marco-MiniLM-L-6-v2
      cross_encoder_batch_size: 32
      cross_encoder_threshold: 0.0
  accounts:
    allOf:
    - $ref: '#/$defs/Accounts'
    default:
      api_url: https://api.innohassle.ru/accounts/v0
  minio:
    $ref: '#/$defs/MinioSettings'
required:
- api_settings
- minio
title: Settings
type: object
