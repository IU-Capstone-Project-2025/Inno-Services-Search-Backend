$schema: https://json-schema.org/draft-07/schema#
$defs:
  Accounts:
    description: InNoHassle-Accounts integration settings
    properties:
      api_url:
        default: https://api.innohassle.ru/accounts/v0
        description: URL of the Accounts API
        title: Api Url
        type: string
    title: Accounts
    type: object
  ApiSettings:
    properties:
      app_root_path:
        default: ''
        description: Prefix for the API path (e.g. "/api/v0")
        title: App Root Path
        type: string
      cors_allow_origin_regex:
        default: .*
        description: 'Allowed origins for CORS: from which domains requests to the
          API are allowed. Specify as a regex: `https://.*\.innohassle\.ru`'
        title: Cors Allow Origin Regex
        type: string
      db_url:
        description: URL of the MongoDB database
        examples:
        - mongodb://username:password@localhost:27017/db?authSource=admin
        format: password
        title: Db Url
        type: string
        writeOnly: true
      scheduler_enabled:
        default: true
        description: Enable scheduler
        title: Scheduler Enabled
        type: boolean
    required:
    - db_url
    title: ApiSettings
    type: object
  MinioSettings:
    properties:
      endpoint:
        default: 127.0.0.1:9000
        description: URL of the target service.
        title: Endpoint
        type: string
      secure:
        default: false
        description: Use https connection to the service.
        title: Secure
        type: boolean
      region:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: Region of the service.
        title: Region
      bucket:
        default: search
        description: Name of the bucket in the service.
        title: Bucket
        type: string
      access_key:
        description: Access key (user ID) of a user account in the service.
        examples:
        - minioadmin
        title: Access Key
        type: string
      secret_key:
        description: Secret key (password) for the user account.
        examples:
        - password
        format: password
        title: Secret Key
        type: string
        writeOnly: true
    required:
    - access_key
    - secret_key
    title: MinioSettings
    type: object
  MlServiceSettings:
    properties:
      api_url:
        default: http://127.0.0.1:8002
        description: URL of ml service API
        title: Api Url
        type: string
      api_key:
        description: Secret key to access API
        format: password
        title: Api Key
        type: string
        writeOnly: true
      mongo_url:
        description: URL of the MongoDB database
        examples:
        - mongodb://username:password@localhost:27017/db?authSource=admin
        format: password
        title: Mongo Url
        type: string
        writeOnly: true
      lancedb_uri:
        default: ./lance_data
        description: URI of the LanceDB database
        title: Lancedb Uri
        type: string
      infinity_url:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: URL of the deployed Infinity engine API, if not provided, use
          local models
        examples:
        - http://127.0.0.1:7997
        title: Infinity Url
      bi_encoder:
        default: jinaai/jina-embeddings-v3
        description: Model to use for embeddings (should be available on Infinity)
        title: Bi Encoder
        type: string
      bi_encoder_dim:
        default: 768
        description: Dimension of the bi-encoder
        title: Bi Encoder Dim
        type: integer
      bi_encoder_search_limit_per_table:
        default: 10
        description: Limit for the number of results from the bi-encoder
        title: Bi Encoder Search Limit Per Table
        type: integer
      cross_encoder:
        default: jinaai/jina-reranker-v2-base-multilingual
        description: Model to use for reranking (should be available on Infinity)
        title: Cross Encoder
        type: string
      llm_api_base:
        default: https://openrouter.ai/api/v1
        description: URL of the external LLM API
        title: Llm Api Base
        type: string
      llm_model:
        default: openai/gpt-4.1-mini
        title: Llm Model
        type: string
      openrouter_api_key:
        description: API key for OpenRouter
        format: password
        title: Openrouter Api Key
        type: string
        writeOnly: true
      system_prompt:
        default: "You are a helpful assistant for students in Innopolis University\
          \ developed by one-zero-eight community.\nYou can search data in your knowledge\
          \ database: moodle files, campuslife, eduwiki, hotel, maps,\nresident companies\
          \ of Innopolis city, InNoHassle, My University, and other resources.\n\n\
          [1] one-zero-eight \u2014 is a community of Innopolis University students\
          \ passionate about technology.\n    We care about education we get, tools\
          \ we use and place we live in.\n    Our mission is to create the perfect\
          \ environment for student life.\n    https://t.me/one_zero_eight\n\nALWAYS\
          \ answer in the SAME language as the user's question:\nIf the user writes\
          \ in Russian \u2014 answer in Russian; If the user writes in English \u2014\
          \ answer in English.\nWhen you generate an answer, base it strictly on the\
          \ provided contexts and do not rely on any hard-coded example.\n\n<example\
          \ id=1>\n  <user>\n  \u0413\u0434\u0435 \u043D\u0430\u0445\u043E\u0434\u0438\
          \u0442\u0441\u044F 108\u0430\u044F \u0430\u0443\u0434\u0438\u0442\u043E\u0440\
          \u0438\u044F?\n  <context>\n  <source>\n  # Floor 1\n  ### 108\n  **Description:**\
          \ Big lecture room \xABEast\xBB\n  </source>\n\n  <source>\n  # Floor 2\n\
          \  ### 108\n  **Description:** Main entrance is on the 1st floor. There\
          \ is an additional entrance from the 2nd floor.\n  </source>\n  </context>\n\
          \  </user>\n  <assistant>\n  \u041E\u0441\u043D\u043E\u0432\u043D\u043E\u0439\
          \ \u0432\u0445\u043E\u0434 \u0432 108\u0443\u044E \u0430\u0443\u0434\u0438\
          \u0442\u043E\u0440\u0438\u044E \u043D\u0430\u0445\u043E\u0434\u0438\u0442\
          \u0441\u044F \u043D\u0430 \u043F\u0435\u0440\u0432\u043E\u043C \u044D\u0442\
          \u0430\u0436\u0435, \u0434\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\
          \u043B\u044C\u043D\u044B\u0439 \u043D\u0430 \u0432\u0442\u043E\u0440\u043E\
          \u043C.\n  </assistant>\n</example>\n"
        description: System prompt for OpenRouter
        title: System Prompt
        type: string
      timeout:
        default: 180.0
        description: Timeout in seconds for API requests
        title: Timeout
        type: number
      rerank_threshold:
        default: 0.1
        title: Rerank Threshold
        type: number
    required:
    - api_key
    - mongo_url
    - openrouter_api_key
    title: MlServiceSettings
    type: object
properties:
  $schema:
    default: null
    title: $Schema
    type: string
  api_settings:
    $ref: '#/$defs/ApiSettings'
  ml_service:
    $ref: '#/$defs/MlServiceSettings'
  accounts:
    $ref: '#/$defs/Accounts'
    default:
      api_url: https://api.innohassle.ru/accounts/v0
  minio:
    $ref: '#/$defs/MinioSettings'
required:
- api_settings
- ml_service
- minio
title: Settings
type: object
